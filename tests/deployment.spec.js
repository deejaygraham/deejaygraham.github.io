// @ts-check
import { test, expect } from '@playwright/test';
import checkResourceExists from './util/check-resource-exists.js';
  
// website favicon and variants generated by a plugin
test("contains favicon and variants", async ({ page }) => {
  await verifyLinks(page, [
    "/favicon.ico",
    "/apple-touch-icon.png",
    "/icon-192.png",
    "/icon-512.png",
    "/manifest.webmanifest",
    "/img/favicon.png",
  ]);
});

// avatar logo from top left corner
test("contains avatar images", async ({ page }) => {
  await verifyLinks(page, [
    "/img/avatar.svg"
  ]);
});

test("contains hero images", async ({ page }) => {
  await verifyLinks(page, [
    "/img/heroes/hero-secret-harbour.jpg",
    "/img/heroes/makers-and-creators.jpg"
  ]);
});

test("contains og social images for blog posts", async ({ page }) => {
  await verifyLinks(page, [
    "/img/previews/singing-the-portal-theme.png",
    "/img/previews/microbit-bird-song2.png",
  ]);
});

test("contains svg icons", async ({ page }) => {
  await verifyLinks(page, [
    "/img/bluesky.svg",
    "/img/github.svg",
    "/img/linkedin.svg",
    "/img/mastodon.svg",
    "/img/rss.svg",
    "/img/sessionize.svg",   
    "/img/slideshare.svg"
  ]);
});

test("contains javascripts", async ({ page }) => {
  await verifyLinks(page, [
    "/js/site.js",
    "/js/search.js",
    "/js/elasticlunr.min.js",
    "/sw.js"
  ]);
});

test("contains json search db", async ({ page }) => {
  await checkResourceExists(page, "/search-index.json");
});

test("contains xml feeds", async ({ page }) => {
  await verifyLinks(page, [
    "/rss.xml",
    "/feed.json",
    "/sitemap.xml"
  ]);
});

test("automation files", async ({ page }) => {
  await verifyLinks(page, [
    "/robots.txt",
    "/humans.txt",
  ]);
});

test("contains css", async ({ page }) => {
  await verifyLinks(page, [
    "/css/site.css",
    "/css/prism.css",
  ]);
});

async function verifyLinks(page, urls) {
  for (const url of urls) {
    await checkResourceExists(page, url);
  }
}
